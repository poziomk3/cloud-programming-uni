openapi: 3.0.3
info:
  title: User Service API
  version: 1.0.0
  description: Handles user registration and retrieval.

paths:
  /users:
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUserResponse'
        '400':
          description: Invalid input

  /users/{id}:
    get:
      summary: Get user details
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinimalUserDto'
        '404':
          description: User not found

components:
  schemas:
    # DTO for POST /users request
    RegisterUserRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    # DTO for POST /users response
    RegisterUserResponse:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
          format: uuid

    # DTO for GET /users/{id} response (minimal info)
    MinimalUserDto:
      type: object
      required:
        - userId
        - email
        - createdAt
      properties:
        userId:
          type: string
          format: uuid
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time

    # Event DTO (sent via RabbitMQ, not exposed as API)
    UserRegisteredEvent:
      x-event: true
      type: object
      required:
        - userId
        - email
        - password
        - createdAt
      properties:
        userId:
          type: string
          format: uuid
        email:
          type: string
          format: email
        password:
          type: string
        createdAt:
          type: string
          format: date-time
